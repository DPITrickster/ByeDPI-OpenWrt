permissions:
  contents: write

name: build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */14 * *'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Checkout repository (to read .last_release_tag)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get upstream latest release tag
        id: get_tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: 'hufrea/byedpi'
        run: |
          TAG=$(wget -qO- --header="Authorization: token $GH_TOKEN" "https://api.github.com/repos/$REPO/releases/latest" | grep -Po '"tag_name": "\K.+?(?=")')
          echo "Latest upstream tag: $TAG"

          if [ -f .last_release_tag ]; then
            LAST=$(cat .last_release_tag)
          else
            LAST=""
          fi
          echo "Last processed tag: $LAST"

          if [ "$TAG" = "$LAST" ]; then
            echo "tag=SKIP" >> $GITHUB_OUTPUT
            echo "No new release. Skipping build."
            exit 0
          fi

          echo "tag=$TAG" >> $GITHUB_OUTPUT

  build:
    needs: check
    if: ${{ needs.check.outputs.tag != 'SKIP' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        branch:
          - openwrt-19.07
          - openwrt-21.02
          - openwrt-22.03
          - openwrt-23.05
          - openwrt-24.10
        arch:
          - aarch64_cortex-a53
          - aarch64_cortex-a72
          - aarch64_generic
          - arm_arm1176jzf-s_vfp
          - arm_arm926ej-s
          - arm_cortex-a15_neon-vfpv4
          - arm_cortex-a5_vfpv4
          - arm_cortex-a7
          - arm_cortex-a7_neon-vfpv4
          - arm_cortex-a7_vfpv4
          - arm_cortex-a8_vfpv3
          - arm_cortex-a9
          - arm_cortex-a9_neon
          - arm_cortex-a9_vfpv3-d16
          - arm_fa526
          - arm_mpcore
          - arm_xscale
          - mips64_octeonplus
          - mips_24kc
          - mips_4kec
          - mips_mips32
          - mipsel_24kc
          - mipsel_24kc_24kf
          - mipsel_74kc
          - mipsel_mips32
          - x86_64
        exclude:
          - branch: openwrt-19.07
            arch: arm_cortex-a7
          - branch: openwrt-19.07
            arch: arm_cortex-a7_vfpv4
          - branch: openwrt-19.07
            arch: mips_4kec
          - branch: openwrt-21.02
            arch: arm_cortex-a7_vfpv4
          - branch: openwrt-24.10
            arch: arm_mpcore
        include:
          - branch: openwrt-24.10
            arch: aarch64_cortex-a76
    container:
      image: openwrt/sdk:${{ matrix.arch }}-${{ matrix.branch }}
      options: --user root
    defaults: { run: { shell: bash } }
    env:
      UPSTREAM_TAG: ${{ needs.check.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SDK
        if: ${{ matrix.branch == 'openwrt-23.05' || matrix.branch == 'openwrt-24.10' || matrix.branch == 'SNAPSHOT' }}
        working-directory: /builder
        run: HOME=/builder ./setup.sh

      - name: Prepare package (set version)
        run: |
          # Используем UPSTREAM_TAG, полученный на этапе check
          sed "s|@VERSION@|${UPSTREAM_TAG#v}|" -i byedpi/Makefile

      - name: Compile package
        id: compile
        working-directory: ${{ matrix.branch == 'openwrt-19.07' && '/home/build/openwrt' || '/builder' }}
        env:
          ARCH: ${{ matrix.arch }}
          BRANCH: ${{ matrix.branch }}
          SIGN_KEY: ${{ secrets.SIGN_PRIVATE_KEY }}
        run: |
          echo "src-link byedpi $GITHUB_WORKSPACE" >> feeds.conf
          ./scripts/feeds update byedpi
          ./scripts/feeds install -a -p byedpi
          make defconfig
          make package/byedpi/compile V=s -j$(nproc) BUILD_LOG=1
          echo "$SIGN_KEY" | base64 -d > key-build
          tar -C ./bin/packages/*/byedpi -cvf $GITHUB_WORKSPACE/ipk-$BRANCH-$ARCH.tar --transform "s|^\./|${BRANCH/openwrt-}/$ARCH/|" --show-transformed-names .

      - name: Compress build logs
        if: ${{ always() }}
        env:
          ARCH: ${{ matrix.arch }}
          BRANCH: ${{ matrix.branch }}
          LOGS_DIR: ${{ matrix.branch == 'openwrt-19.07' && '/home/build/openwrt/logs' || '/builder/logs' }}
        run: |
          if [ -d "$LOGS_DIR" ]; then
            tar -cJvf logs-$BRANCH-$ARCH.tar.xz "$LOGS_DIR"
          else
            echo "No logs dir at $LOGS_DIR — skipping compression."
          fi

      - name: Upload packages
        if: ${{ steps.compile.outcome == 'success' }}
        uses: actions/upload-artifact@v4
        with:
          name: ipk-${{ matrix.branch }}-${{ matrix.arch }}
          path: ipk-${{ matrix.branch }}-${{ matrix.arch }}.tar
          if-no-files-found: error

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.branch }}-${{ matrix.arch }}
          path: logs-*.tar.xz
          if-no-files-found: ignore

  gh-pages:
    needs: [check, build]
    if: ${{ needs.check.outputs.tag != 'SKIP' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ipk-*

      - name: Prepare files
        run: |
          mkdir -p public
          find . -name 'ipk-*.tar' -exec tar -C ./public -xvf {} \;
          cat <<EOF >> public/public.key
          untrusted comment: ByeDPI OpenWrt repo
          RWRT/Cfg5ReIbqWME8QTUQ1FKxp8FTr9M9g1vDsL8uIdRyP5TTNAk4QA
          EOF

      - name: Deploy to GH pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          full_commit_message: 'ByeDPI ${{ needs.check.outputs.tag }}'
          force_orphan: true

      - name: Checkout repo to update last tag
        if: ${{ success() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Update .last_release_tag
        if: ${{ success() }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo "${{ needs.check.outputs.tag }}" > .last_release_tag
          git add .last_release_tag
          git commit -m "Update last_release_tag to ${{ needs.check.outputs.tag }} [skip ci]" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}

  release:
    needs: [check, build, gh-pages]
    if: ${{ needs.check.outputs.tag != 'SKIP' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        branch:
          - '19.07'
          - '21.02'
          - '22.03'
          - '23.05'
          - '24.10'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ipk-*

      - name: Prepare files
        env:
          BRANCH: ${{ matrix.branch }}
        run: |
          find . -name "ipk-openwrt-$BRANCH-*.tar" -exec tar -xvf {} --wildcards '*.ipk' \;

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          tag_name: ${{ needs.check.outputs.tag }}-${{ matrix.branch }}
          name: ${{ needs.check.outputs.tag }} for OpenWrt ${{ matrix.branch }}
          target_commitish: gh-pages
          body: |
            ### ByeDPI ${{ needs.check.outputs.tag }} for OpenWrt ${{ matrix.branch }}

            -----
            Check the package architecture of your device using the command:
            ```
            # awk -F\' '/DISTRIB_ARCH/ {print $2}' /etc/openwrt_release
            ```
          files: ./**/*.ipk
