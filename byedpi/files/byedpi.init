#!/bin/sh /etc/rc.common
# shellcheck disable=SC3043,SC2034

START=95
USE_PROCD=1
#PROCD_DEBUG=1
PROG=/usr/bin/ciadpi
OPTS=""

readonly packageName='byedpi'

boot() {
	# Wait for the loopback interface to be ready
	ubus -t 30 wait_for network.interface network.loopback 2>/dev/null
	rc_procd start_service
}

xappend() {
	local name="$2" value="$1"
	OPTS="$OPTS --${name//_/-} ${value//'/\\'}"
}

append_opts() {
	local name value cfg="$1"; shift
	for name in $*; do
		config_get value "$cfg" "$name"
		[ -n "$value" ] && xappend "$value" "$name"
	done
}

append_opts_list() {
	local name cfg="$1"; shift
	for name in $*; do
		config_list_foreach "$cfg" "$name" xappend "$name"
	done
}

append_opts_boolean() {
	local name value cfg="$1"; shift
	for name in $*; do
		config_get_bool value "$cfg" "$name" 0
		[ $value -gt 0 ] && xappend '' $name
	done
}

section_enabled() {
	config_get_bool enabled "$1" 'enabled' 0
	[ $enabled -gt 0 ]
}

start_instance() {
	local cfg="$1"
	local cmd_opts

	section_enabled "$cfg" || return

	OPTS=""

	config_get cmd_opts main cmd_opts
	if [ -n "$cmd_opts" ]; then
		OPTS="$cmd_opts"
	else
		append_opts "$cfg" ip port pidfile max_conn conn_ip buf_size debug def_ttl auto auto_mode cache_ttl timeout proto \
			hosts ipset pf round disorder oob disoob fake ttl fake_offset fake_data fake_tls_mod oob_data mod_http udp_fake
		append_opts_list "$cfg" split fake_sni tlsrec
		append_opts_boolean "$cfg" transparent no_domain no_udp tfo md5sig drop_sack
	fi

	procd_open_instance
	procd_set_param command $PROG $OPTS
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param user nobody
	procd_set_param respawn
	procd_close_instance
}

start_service() {
	config_load "${packageName}"
	config_foreach start_instance "${packageName}"
}

service_triggers() {
	procd_add_config_trigger "config.change" "${packageName}" /etc/init.d/${packageName} reload
}
